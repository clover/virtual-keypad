{"version":3,"sources":["common/constants.js","store/actions/initialState.js","common/Storage.js","store/configuration/initialState.js","store/connection/initialState.js","store/connection/reducer.js","store/devices/initialState.js","store/error/initialState.js","store/settings/initialState.js","store/signature/initialState.js","common/retryFetch.js","common/api.js","common/fetchDevices.js","common/fetchSettings.js","common/format.js","store/transactions/initialState.js","store/rootReducer.js","store/actions/reducer.js","store/actions/constants.js","store/connection/constants.js","store/buffer/reducer.js","store/buffer/initialState.js","store/buffer/constants.js","store/configuration/reducer.js","store/configuration/constants.js","store/devices/reducer.js","store/devices/constants.js","store/error/reducer.js","store/error/constants.js","store/settings/reducer.js","store/settings/constants.js","store/signature/reducer.js","store/signature/constants.js","store/status/reducer.js","store/status/initialState.js","store/status/constants.js","store/transactions/reducer.js","store/transactions/constants.js","store/configuration/selectors.js","store/error/actions.js","store/actions/actions.js","store/connection/selectors.js","store/status/actions.js","common/persist.js","store/configuration/actions.js","store/devices/actions.js","store/settings/actions.js","store/thunks/configure.js","store/devices/selectors.js","store/connection/actions.js","store/thunks/connect.js","store/transactions/actions.js","store/thunks/disconnect.js","locales/index.js","i18n.js","store/thunks/reset.js","store/error/selectors.js","store/thunks/showWelcome.js","store/buffer/actions.js","store/buffer/selectors.js","store/transactions/selectors.js","store/thunks/transaction.js","store/thunks/voidPayment.js","store/store.js","store/createStore.js","store/actions/selectors.js","store/settings/selectors.js","store/signature/selectors.js","store/status/selectors.js","components/Configuration/selectors.js","components/Fields/TextField.js","components/Fields/CheckboxField.js","components/SVG/Logo.js","components/Configuration/Configuration.js","components/Devices/selectors.js","components/Devices/Device.js","components/Devices/Devices.js","components/Keypad/constants.js","store/thunks/acceptPayment.js","store/thunks/acceptSignature.js","store/signature/actions.js","store/thunks/identify.js","store/thunks/invokeInputOption.js","store/thunks/rejectPayment.js","store/thunks/rejectSignature.js","components/Keypad/selectors.js","components/Keypad/Signature.js","components/Keypad/Screen.js","components/Keypad/ScaleText.js","components/Keypad/Key.js","components/Keypad/Keys.js","components/Keypad/Menu.js","components/Transaction/parseAmounts.js","components/Transaction/Transaction.js","components/Transaction/useShowTransaction.js","components/Keypad/History.js","components/Keypad/Keypad.js","components/Error/Error.js","components/App/App.js","components/App/useMouse.js","components/Error/useError.js","components/App/usePreventDoubleTapZoom.js","components/Transaction/useTransactions.js","serviceWorker.js","index.js"],"names":["ACTION","APP","APP_NAME","APP_BY_NAME","Object","fromEntries","entries","map","arr","reverse","DOMAIN","PERMISSION","MANUAL_ENTRY_ALLOWED","PERFORM_MANUAL_REFUND","VOID_PAYMENTS","REG_PRODUCTS","TRANSACTION","get","JSON","parse","atob","localStorage","getItem","e","qs","QS","window","location","search","hash","storage","Storage","cloverDomain","document","referrer","URL","origin","includes","toString","configuration","getCloverDomain","merchantId","merchant_id","employeeId","employee_id","accessToken","access_token","raid","friendlyId","forceConnect","loading","undefined","connector","connected","fixCreditPayIntent","doTxStart","device","payIntent","order","requestInfo","externalReferenceId","externalPaymentId","call","tryDispose","dispose","list","selected","devices","message","stack","important","employee","permissions","width","height","strokes","retryFetch","url","retries","options","fetch","catch","deviceApps","deviceId","method","headers","accept","then","r","json","permissionSets","filterNames","values","searchParams","set","length","n","join","appsReducer","o","a","app","appName","createPartition","array","size","reduce","last","push","api","elements","filter","d","test","productName","partitions","i","Promise","all","id","apps","flat","applications","currency","value","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","active","mode","data","rootReducer","combineReducers","actions","state","initialState","type","payload","found","some","description","inputOptions","io","buffer","replace","slice","connection","request","Clover","remotepay","RetrieveDeviceStatusRequest","setSendLastMessage","retrieveDeviceStatus","error","stringify","success","settings","signature","status","challenges","transactions","cur","timestamp","Date","now","amount","tipAmount","visible","newState","payment","credit","selectConfiguration","selectFriendlyId","createSelector","selectProduction","selectCardEntryMethods","production","CardEntryMethods","DEFAULT","CARD_ENTRY_METHOD_MANUAL","selectConfigurationLoading","setError","setActions","selectConnection","selectConnector","setStatus","text","initialDevices","setItem","btoa","setConfiguration","setDeviceId","setDevices","setPermissions","dispatch","getState","persist","fetchDevices","Error","fetchSettings","selectRawDevices","selectDeviceId","selectDevices","sort","b","setConnector","find","factory","CloverConnectorFactoryBuilder","createICloverConnectorFactory","FACTORY_VERSION","VERSION_12","createICloverConnector","WebSocketCloudCloverDeviceConfigurationBuilder","setCloverServer","setFriendlyId","setForceConnect","build","Listener","keys","getPrototypeOf","forEach","ICloverConnectorListener","listener","addCloverConnectorListener","initializeConnection","setActiveTransaction","hideTransaction","updateTransaction","showWelcomeScreen","resolve","setTimeout","en","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","debug","keySeparator","nsSeparator","interpolation","escapeValue","resources","action","resetDevice","selectError","appendBuffer","selectBuffer","selectRawTransactions","selectTransactions","selectActiveTransaction","selectActiveTransactionType","selectActiveTransactionAmount","selectPaymentTransactions","t","selectVisiblePaymentTransactions","selectTransactionMode","cardEntryMethods","CloverID","getNewId","SaleRequest","setAmount","setExternalId","setCardEntryMethods","sale","ManualRefundRequest","manualRefund","orderId","VoidPaymentRequest","setPaymentId","setOrderId","setVoidReason","VoidReason","USER_CANCEL","voidPayment","store","middleware","applyMiddleware","thunk","devTools","__REDUX_DEVTOOLS_EXTENSION__","enhancer","f","createStore","compose","config","configure","selectActions","selectTransactionAction","selectNonTransactionActions","selectRawSettings","selectEmployee","selectEmployeeRoles","roles","selectPermissions","selectCreditEnabled","employeeRoles","employeeRoleIds","permissionRoleIds","Set","p","name","has","selectVoidEnabled","selectSignature","selectSignatureBounds","bounds","points","point","x","X","y","Y","Math","min","max","Infinity","selectSignatureLines","selectStatus","selectVisible","autoCorrect","autoComplete","autoCapitalize","spellCheck","disabled","onChange","other","useTranslation","useState","show","setShow","toggle","useCallback","label","useMemo","title","help","className","htmlFor","Button","color","outline","onFocus","Popover","trigger","isOpen","target","PopoverHeader","PopoverBody","source","linkTarget","event","checked","isSwitch","switch","mb0","classNames","xmlns","viewBox","aria-labelledby","role","data-name","transform","useDispatch","useSelector","setCloverDomain","setMerchantId","setEmployeeId","setAccessToken","setRaid","expanded","setExpanded","submitting","setSubmitting","console","log","submit","preventDefault","reset","onSubmit","onReset","Card","CardHeader","Logo","CardBody","onClick","Collapse","TextField","required","pattern","maxLength","CheckboxField","CardFooter","stopPropagation","cloud","cloudStatus","key","serial","onMouseEnter","onMouseLeave","aria-label","Tooltip","placement","setDisabled","select","connect","Device","ACTION_CREATOR","acceptPayment","VerifySignatureRequest","setPayment","acceptSignature","disconnect","showMessage","InputOption","setDescription","setKeyPress","keyPress","invokeInputOption","rejectPayment","rejectSignature","showWelcome","transaction","MODE","HISTORY","lines","fill","stroke","tranType","tranAmount","Signature","measure","el","scale","fontSize","style","parentElement","offsetWidth","offsetHeight","scrollWidth","scrollHeight","children","minScale","maxScale","ref","useRef","useEffect","current","resize","attempts","mid","classList","add","forwardRef","ref$","keyCodes","moreActions","moreText","onMoreClick","keydown","code","addEventListener","removeEventListener","k","ButtonDropdown","DropdownToggle","caret","DropdownMenu","right","DropdownItem","innerRef","ScaleText","transactionAction","transactionMode","creditEnabled","actionClicked","setActionClicked","keysDisabled","onAction","actionHandler","keyRef","keyHeight","setKeyHeight","submitOptions","action1","action2","Key","setMode","onShowWelcome","onDisconnect","m","readOnly","divider","start","final","partial","remaining","removeToast","useToasts","voidEnabled","voidableUntil","minutes","voidable","setVoidable","ms","to","clearTimeout","parseAmounts","onRemaining","doTransaction","onVoid","Table","orderRef","cardTransaction","cardType","first6","last4","repeat","trim","card","cardholderName","autoDismiss","addToast","appearance","Transaction","autoDismissTimeout","onDismiss","showTransaction","useShowTransaction","sortedTransactions","compareDesc","hover","striped","format","parseTimestamp","parseAmount","Menu","Screen","Keys","History","querySelectorAll","querySelector","remove","mouse","setMouse","onHover","useMouse","useError","expires","handler","touches","click","body","passive","usePreventDoubleTapZoom","useTransactions","Configuration","Devices","Keypad","Boolean","hostname","match","ReactDOM","render","StrictMode","App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4680946.chunk.js","sourcesContent":["export const ACTION = {\n  ACCEPT_PAYMENT: 'ACCEPT_PAYMENT',\n  ACCEPT_SIGNATURE: 'ACCEPT_SIGNATURE',\n  DISCONNECT: 'DISCONNECT',\n  IDENTIFY: 'IDENTIFY',\n  INVOKE_INPUT_OPTION: 'INVOKE_INPUT_OPTION',\n  REJECT_PAYMENT: 'REJECT_PAYMENT',\n  REJECT_SIGNATURE: 'REJECT_SIGNATURE',\n  RESET: 'RESET',\n  SHOW_WELCOME: 'SHOW_WELCOME',\n  TRANSACTION: 'TRANSACTION',\n  TRANSACTION_MODE: 'TRANSACTION_MODE',\n  VOID_PAYMENT: 'VOID_PAYMENT',\n};\n\nexport const APP = {\n  CLOUD_PAY_DISPLAY: 'CLOUD_PAY_DISPLAY',\n};\n\nexport const APP_NAME = {\n  [APP.CLOUD_PAY_DISPLAY]: 'Cloud Pay Display',\n};\n\nexport const APP_BY_NAME = Object.fromEntries(Object.entries(APP_NAME).map(arr => arr.reverse()));\n\nexport const DOMAIN = 'https://www.clover.com';\n\nexport const PERMISSION = {\n  MANUAL_ENTRY_ALLOWED: 'MANUAL_ENTRY_ALLOWED',\n  PERFORM_MANUAL_REFUND: 'PERFORM_MANUAL_REFUND',\n  VOID_PAYMENTS: 'VOID_PAYMENTS',\n};\n\nexport const REG_PRODUCTS = /^(Flex|Mini|Mobile)/i;\n\nexport const STORAGE = 'clover/virtual-keypad';\n\nexport const TRANSACTION = {\n  SALE: 'SALE',\n  CREDIT: 'CREDIT',\n  VOID: 'VOID',\n};\n","export default [];\n","import { STORAGE } from './constants';\n\nexport const set = value => {\n  localStorage.setItem(STORAGE, btoa(JSON.stringify(value)));\n};\n\nexport const get = () => {\n  try {\n    return JSON.parse(atob(localStorage.getItem(STORAGE) || 'bnVsbA=='));\n  } catch (e) {\n    return null;\n  }\n};\n","import QS from 'query-string';\n\nimport { DOMAIN } from '../../common/constants';\nimport * as Storage from '../../common/Storage';\n\nconst qs = QS.parse(window.location.search);\nconst hash = QS.parse(window.location.hash);\nconst storage = Storage.get();\n\nconst getCloverDomain = () => {\n  if (document.referrer) {\n    const referrer = new URL(document.referrer);\n    if (referrer.origin.includes('clover.com')) {\n      return referrer.toString();\n    }\n  }\n  if (storage?.configuration?.cloverDomain) {\n    return storage?.configuration?.cloverDomain;\n  }\n  return DOMAIN;\n};\n\nexport default {\n  cloverDomain: getCloverDomain(),\n  merchantId: qs.merchant_id || storage?.configuration?.merchantId || '',\n  employeeId: qs.employee_id || storage?.configuration?.employeeId || '',\n  accessToken: hash.access_token || storage?.configuration?.accessToken || '',\n  raid: qs.raid || storage?.configuration?.raid || '',\n  friendlyId: storage?.configuration?.friendlyId || 'Virtual Keypad',\n  forceConnect: false,\n  loading: undefined,\n};\n","export default {\n  connector: null,\n  connected: false,\n};\n","import Clover from 'remote-pay-cloud';\n\nimport * as CONST from './constants';\nimport initialState from './initialState';\n\nconst fixCreditPayIntent = connector => {\n  // HACK: CREDIT transactions do not properly relay externalId nor externalReferenceId\n  // We are going to override connector.device.doTxStart and populate the externalReferenceId from the externalPaymentId\n  const { doTxStart } = connector.device;\n  // eslint-disable-next-line no-param-reassign\n  connector.device.doTxStart = (payIntent, order, requestInfo) => {\n    if (requestInfo === 'CREDIT') {\n      // eslint-disable-next-line no-param-reassign\n      payIntent.externalReferenceId = payIntent.externalPaymentId;\n    }\n    return doTxStart.call(connector.device, payIntent, order, requestInfo);\n  };\n};\n\nconst tryDispose = connector => {\n  try {\n    // eslint-disable-next-line no-unused-expressions\n    connector?.dispose();\n  } catch (e) {\n    // Do nothing\n  }\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.CONNECTION_CLEAR:\n      tryDispose(state.connector);\n      return initialState;\n    case CONST.CONNECTION_SET:\n      tryDispose(state.connector);\n      return {\n        ...state,\n        connector: payload,\n        connected: false,\n      };\n    case '@@connector/onDeviceDisconnected':\n      return { ...state, connected: false };\n    case '@@connector/onDeviceReady': {\n      fixCreditPayIntent(state.connector);\n      const request = new Clover.remotepay.RetrieveDeviceStatusRequest();\n      request.setSendLastMessage(true);\n      state.connector.retrieveDeviceStatus(request);\n\n      return { ...state, connected: true };\n    }\n    default:\n      return state;\n  }\n};\n","import * as Storage from '../../common/Storage';\n\nconst storage = Storage.get();\n\nexport default {\n  list: [],\n  selected: storage?.devices?.selected || '',\n};\n","export default {\n  message: null,\n  stack: null,\n  important: undefined,\n};\n","export default {\n  employee: null,\n  permissions: null,\n};\n","export default {\n  width: 0,\n  height: 0,\n  strokes: [],\n};\n","const retryFetch = (url, { retries = 3, ...options }) =>\n  fetch(url, options).catch(e => {\n    if (retries > 1) return retryFetch(url, { retries: retries - 1, ...options });\n    throw e;\n  });\n\nexport default retryFetch;\n","import { PERMISSION } from './constants';\nimport retryFetch from './retryFetch';\n\nexport const deviceApps = ({ cloverDomain, merchantId, deviceId, accessToken }) =>\n  retryFetch(\n    new URL(\n      `/v2/merchant/${merchantId}/device/${deviceId}/current_apps?access_token=${accessToken}`,\n      cloverDomain\n    ).toString(),\n    {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        'content-type': 'application/json',\n      },\n    }\n  ).then(r => r.json());\n\nexport const devices = ({ cloverDomain, merchantId, accessToken }) =>\n  retryFetch(new URL(`/v3/merchants/${merchantId}/devices?access_token=${accessToken}`, cloverDomain).toString(), {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      'content-type': 'application/json',\n    },\n  }).then(r => r.json());\n\nexport const employee = ({ cloverDomain, merchantId, employeeId, accessToken }) =>\n  retryFetch(\n    new URL(\n      `/v3/merchants/${merchantId}/employees/${employeeId}?access_token=${accessToken}&expand=roles`,\n      cloverDomain\n    ).toString(),\n    {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        'content-type': 'application/json',\n      },\n    }\n  ).then(r => r.json());\n\nexport const permissionSets = ({ cloverDomain, merchantId, accessToken, filterNames = Object.values(PERMISSION) }) => {\n  const url = new URL(`/v3/merchants/${merchantId}/permission_sets`, cloverDomain);\n  url.searchParams.set('access_token', accessToken);\n  url.searchParams.set('expand', 'roles');\n  url.searchParams.set('limit', 1000);\n  if (filterNames?.length) {\n    url.searchParams.set('filter', `name in (${filterNames.map(n => `'${n}'`).join(',')})`);\n  }\n  return retryFetch(url.toString(), {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      'content-type': 'application/json',\n    },\n  }).then(r => r.json());\n};\n","import { APP_BY_NAME, REG_PRODUCTS } from './constants';\nimport * as api from './api';\n\nconst appsReducer = (o, a) => {\n  const app = APP_BY_NAME[a.appName];\n  return app ? { ...o, [app]: true } : o;\n};\n\nconst createPartition = (array, size) =>\n  array.reduce(\n    (a, o) => {\n      const last = a[a.length - 1];\n      if (last.length === size) {\n        a.push([o]);\n      } else {\n        last.push(o);\n      }\n      return a;\n    },\n    [[]]\n  );\n\nexport default async ({ cloverDomain, merchantId, accessToken }) => {\n  const { elements } = await api.devices({ cloverDomain, merchantId, accessToken });\n  const devices = elements.filter(d => REG_PRODUCTS.test(d.productName));\n\n  // NOTE: We need to limit simultaneous API requests.\n  const partitions = createPartition(devices, 4);\n  for (let i = 0; i < partitions.length; i++) {\n    // eslint-disable-next-line no-await-in-loop\n    partitions[i] = await Promise.all(\n      partitions[i].map(({ id: deviceId }) => api.deviceApps({ cloverDomain, merchantId, accessToken, deviceId }))\n    );\n  }\n  const apps = partitions.flat();\n\n  return devices.map((device, i) => ({\n    ...device,\n    apps: apps[i].applications.reduce(appsReducer, {}),\n  }));\n};\n","import * as api from './api';\n\nexport default async ({ cloverDomain, merchantId, accessToken, employeeId }) => {\n  const [employee, permissions] = await Promise.all([\n    api.employee({ cloverDomain, merchantId, employeeId, accessToken }).catch(() => null),\n    api.permissionSets({ cloverDomain, merchantId, accessToken }).catch(() => null),\n  ]);\n  return { employee, permissions };\n};\n","export const currency = value => {\n  const n = +value;\n  if (!isNaN(n) && n >= 0) {\n    return (n / 100).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n  }\n  return '';\n};\n\nexport const card = ({ first6, last4 }) => [first6, '*'.repeat(6), last4].join('').replace(/.{4}/g, ' $&').trim();\n","import { TRANSACTION } from '../../common';\n\nexport default {\n  active: null,\n  mode: TRANSACTION.SALE,\n  data: {},\n};\n","import { combineReducers } from 'redux';\nimport actions from './actions/reducer';\nimport buffer from './buffer/reducer';\nimport configuration from './configuration/reducer';\nimport connection from './connection/reducer';\nimport devices from './devices/reducer';\nimport error from './error/reducer';\nimport settings from './settings/reducer';\nimport signature from './signature/reducer';\nimport status from './status/reducer';\nimport transactions from './transactions/reducer';\n\nconst rootReducer = combineReducers({\n  actions,\n  buffer,\n  configuration,\n  connection,\n  devices,\n  error,\n  settings,\n  signature,\n  status,\n  transactions,\n});\n\nexport default rootReducer;\n","import { ACTION } from '../../common/constants';\nimport * as CONST from './constants';\nimport { CONNECTION_SET } from '../connection/constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.ACTIONS_CLEAR:\n      return initialState;\n    case CONST.ACTIONS_APPEND: {\n      const found = state.some(a => a.type === payload.type && a.payload?.description === payload.payload?.description);\n      return found ? state : [...state, payload];\n    }\n    case CONST.ACTIONS_SET:\n      return payload || [];\n    case CONNECTION_SET:\n      return [{ type: ACTION.DISCONNECT, payload: { description: 'Cancel' } }];\n    case '@@connector/onDeviceReady':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onResetDeviceResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onDeviceActivityStart':\n      return payload.inputOptions.map(io => ({ type: ACTION.INVOKE_INPUT_OPTION, payload: io }));\n    case '@@connector/onSaleResponse':\n    case '@@connector/onVoidPaymentResponse':\n    case '@@connector/onManualRefundResponse':\n      return [{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }];\n    case '@@connector/onConfirmPaymentRequest':\n      return [\n        { type: ACTION.ACCEPT_PAYMENT, payload },\n        { type: ACTION.REJECT_PAYMENT, payload },\n      ];\n    case '@@connector/onVerifySignatureRequest':\n      return [\n        { type: ACTION.ACCEPT_SIGNATURE, payload },\n        { type: ACTION.REJECT_SIGNATURE, payload },\n      ];\n    default:\n      return state;\n  }\n};\n","export const ACTIONS_APPEND = 'appendActions';\nexport const ACTIONS_CLEAR = 'clearActions';\nexport const ACTIONS_SET = 'setActions';\n","export const CONNECTION_CLEAR = 'clearConnector';\nexport const CONNECTION_SET = 'setConnector';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.BUFFER_CLEAR:\n      return initialState;\n    case CONST.BUFFER_APPEND:\n      return (state + payload).replace(/^0+/, '').slice(0, 7);\n    case CONST.BUFFER_SET:\n      return payload;\n    case CONST.BUFFER_UNDO:\n      return state.length ? state.slice(0, state.length - 1) : '';\n    default:\n      return state;\n  }\n};\n","export default '';\n","export const BUFFER_APPEND = 'appendBuffer';\nexport const BUFFER_CLEAR = 'clearBuffer';\nexport const BUFFER_SET = 'setBuffer';\nexport const BUFFER_UNDO = 'undoBuffer';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.CONFIGURATION_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case CONST.CONFIGURATION_NOT_LOADING:\n      return {\n        ...state,\n        loading: undefined,\n      };\n    case CONST.CONFIGURATION_SET:\n      return {\n        ...state,\n        cloverDomain: payload.cloverDomain || '',\n        merchantId: payload.merchantId || '',\n        employeeId: payload.employeeId || '',\n        raid: payload.raid || '',\n        accessToken: payload.accessToken || '',\n        friendlyId: payload.friendlyId || '',\n        forceConnect: payload.forceConnect || false,\n      };\n    default:\n      return state;\n  }\n};\n","export const CONFIGURATION_LOADING = 'setConfigurationLoading';\nexport const CONFIGURATION_NOT_LOADING = 'setConfigurationNotLoading';\nexport const CONFIGURATION_SET = 'setConfiguration';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.DEVICES_CLEAR_LIST:\n      return {\n        ...state,\n        list: [],\n      };\n    case CONST.DEVICES_CLEAR_SELECTED:\n      return {\n        ...state,\n        selected: '',\n      };\n    case CONST.DEVICES_SET_SELECTED:\n      return {\n        ...state,\n        selected: payload || '',\n      };\n    case CONST.DEVICES_SET_LIST:\n      return {\n        ...state,\n        list: payload || [],\n      };\n    default:\n      return state;\n  }\n};\n","export const DEVICES_CLEAR_LIST = 'clearDevices';\nexport const DEVICES_CLEAR_SELECTED = 'clearDeviceId';\nexport const DEVICES_SET_LIST = 'setDevices';\nexport const DEVICES_SET_SELECTED = 'setDeviceId';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.ERROR_CLEAR:\n      return initialState;\n    case CONST.ERROR_SET:\n      return {\n        ...state,\n        message: payload.message,\n        stack: payload.stack,\n        important: payload.important,\n      };\n    case '@@connector/onDeviceError':\n      return {\n        ...state,\n        message: `Device Error ${payload.message}`,\n        stack: JSON.stringify(payload, null, 2),\n        important: undefined,\n      };\n    case '@@connector/onManualRefundResponse':\n    case '@@connector/onSaleResponse':\n    case '@@connector/onVoidPaymentResponse':\n      if (!payload.success) {\n        return {\n          ...state,\n          message: payload.message,\n          stack: JSON.stringify(payload, null, 2),\n          important: true,\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n","export const ERROR_CLEAR = 'clearError';\nexport const ERROR_SET = 'setError';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.SETTINGS_EMPLOYEE:\n      return {\n        ...state,\n        employee: payload,\n      };\n    case CONST.SETTINGS_PERMISSIONS:\n      return {\n        ...state,\n        permissions: payload,\n      };\n    default:\n      return state;\n  }\n};\n","export const SETTINGS_EMPLOYEE = 'setEmployee';\nexport const SETTINGS_PERMISSIONS = 'setPermissions';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.SIGNATURE_CLEAR:\n      return initialState;\n    case CONST.SIGNATURE_SET:\n      return {\n        width: payload?.width || 0,\n        height: payload?.height || 0,\n        strokes: payload?.strokes || [],\n      };\n    case '@@connector/onVerifySignatureRequest':\n      return {\n        width: payload.signature?.width || 0,\n        height: payload.signature?.height || 0,\n        strokes: payload.signature?.strokes || [],\n      };\n    default:\n      return state;\n  }\n};\n","export const SIGNATURE_CLEAR = 'clearSignature';\nexport const SIGNATURE_SET = 'setSignature';\n","import * as CONST from './constants';\nimport initialState from './initialState';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.STATUS_CLEAR:\n      return '';\n    case CONST.STATUS_SET:\n      return payload || '';\n    case '@@connector/onDeviceReady':\n      return 'Ready';\n    case '@@connector/onResetDeviceResponse':\n      return 'Ready';\n    case '@@connector/onDeviceActivityStart':\n      return payload.message;\n    case '@@connector/onSaleResponse':\n    case '@@connector/onVoidPaymentResponse':\n    case '@@connector/onManualRefundResponse':\n      return 'Ready';\n    case '@@connector/onConfirmPaymentRequest':\n      return payload.challenges[0].message;\n    case '@@connector/onVerifySignatureRequest':\n      return 'Verify Signature';\n    default:\n      return state;\n  }\n};\n","export default '';\n","export const STATUS_CLEAR = 'clearStatus';\nexport const STATUS_SET = 'setStatus';\n","import * as CONST from './constants';\nimport initialState from './initialState';\nimport { TRANSACTION } from '../../common';\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CONST.TRANSACTIONS_MODE:\n      return {\n        ...state,\n        mode: payload,\n      };\n    case CONST.TRANSACTIONS_ACTIVE: {\n      if (payload.id) {\n        const cur = state.data[payload.id] || {};\n\n        return {\n          ...state,\n          active: payload.id,\n          data: {\n            ...state.data,\n            [payload.id]: {\n              ...state.data[payload.id],\n              id: payload.id,\n              timestamp: Date.now(),\n              type: payload.type || cur.type,\n              amount: payload.amount || cur.amount || 0,\n              tipAmount: payload.tipAmount || cur.tipAmount || 0,\n            },\n          },\n        };\n      }\n      return {\n        ...state,\n        active: '',\n      };\n    }\n    case CONST.TRANSACTIONS_HIDE:\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [payload]: {\n            ...state.data[payload],\n            visible: false,\n          },\n        },\n      };\n    case CONST.TRANSACTIONS_SHOW:\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [payload]: {\n            ...state.data[payload],\n            visible: true,\n          },\n        },\n      };\n    case CONST.TRANSACTIONS_REMOVE: {\n      const newState = {\n        ...state,\n        data: { ...state.data },\n      };\n      delete newState.data[payload];\n      return newState;\n    }\n    case CONST.TRANSACTIONS_UPDATE: {\n      const cur = state.data[payload.id] || {};\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [payload.id]: {\n            ...cur,\n            id: payload.id,\n            timestamp: Date.now(),\n            visible: payload.visible || cur.visible || false,\n            amount: payload.amount || cur.amount || 0,\n            tipAmount: payload.tipAmount || cur.tipAmount || 0,\n            type: payload.type || cur.type || '',\n            payment: payload.payment || cur.payment || null,\n          },\n        },\n      };\n    }\n    case '@@connector/onSaleResponse': {\n      if (payload.success) {\n        return {\n          ...state,\n          active: '',\n          data: {\n            ...state.data,\n            [payload.payment.externalPaymentId]: {\n              ...state.data[payload.payment.externalPaymentId],\n              id: payload.payment.externalPaymentId,\n              timestamp: Date.now(),\n              visible: true,\n              type: TRANSACTION.SALE,\n              payment: payload.payment,\n            },\n          },\n        };\n      }\n      const newState = {\n        ...state,\n        active: '',\n      };\n      delete newState.data[state.active];\n      return newState;\n    }\n    case '@@connector/onManualRefundResponse': {\n      if (payload.success) {\n        return {\n          ...state,\n          active: '',\n          data: {\n            ...state.data,\n            [payload.credit.externalReferenceId]: {\n              ...state.data[payload.credit.externalReferenceId],\n              id: payload.credit.externalReferenceId,\n              timestamp: Date.now(),\n              visible: true,\n              type: TRANSACTION.CREDIT,\n              payment: payload.credit,\n            },\n          },\n        };\n      }\n      const newState = {\n        ...state,\n        active: '',\n      };\n      delete newState.data[state.active];\n      return newState;\n    }\n    case '@@connector/onVoidPaymentResponse': {\n      if (payload.success) {\n        return {\n          ...state,\n          active: '',\n          data: {\n            ...state.data,\n            [payload.payment.externalPaymentId]: {\n              ...state.data[payload.payment.externalPaymentId],\n              id: payload.payment.externalPaymentId,\n              timestamp: Date.now(),\n              visible: true,\n              type: TRANSACTION.VOID,\n              payment: payload.payment,\n            },\n          },\n        };\n      }\n      const cur = state.data[state.active];\n      if (cur?.type === TRANSACTION.VOID) {\n        return {\n          ...state,\n          active: '',\n          data: {\n            ...state.data,\n            [cur.id]: {\n              ...state.data[cur.id],\n              type: TRANSACTION.SALE,\n            },\n          },\n        };\n      }\n      return state;\n    }\n\n    default:\n      return state;\n  }\n};\n","export const TRANSACTIONS_ACTIVE = 'setActiveTransaction';\nexport const TRANSACTIONS_REMOVE = 'removeTransaction';\nexport const TRANSACTIONS_UPDATE = 'updateTransaction';\nexport const TRANSACTIONS_SHOW = 'showTransaction';\nexport const TRANSACTIONS_HIDE = 'hideTransaction';\nexport const TRANSACTIONS_MODE = 'setTransactionMode';\n","import Clover from 'remote-pay-cloud';\nimport { createSelector } from 'reselect';\n\nimport { DOMAIN } from '../../common';\n\nexport const selectConfiguration = state => state.configuration;\n\nexport const selectFriendlyId = createSelector(selectConfiguration, ({ friendlyId }) => friendlyId || 'Virtual Keypad');\n\nexport const selectProduction = createSelector(selectConfiguration, ({ cloverDomain }) => cloverDomain === DOMAIN);\n\nexport const selectCardEntryMethods = createSelector(selectProduction, production =>\n  production\n    ? Clover.CardEntryMethods.DEFAULT\n    : // eslint-disable-next-line no-bitwise\n      Clover.CardEntryMethods.DEFAULT | Clover.CardEntryMethods.CARD_ENTRY_METHOD_MANUAL\n);\n\nexport const selectConfigurationLoading = createSelector(selectConfiguration, ({ loading }) => loading || false);\n","import * as CONST from './constants';\n\nexport const clearError = () => ({ type: CONST.ERROR_CLEAR });\n\nexport const setError = ({ message, stack, important } = {}) => ({\n  type: CONST.ERROR_SET,\n  payload: { message, stack, important },\n});\n","import * as CONST from './constants';\n\nexport const appendAction = action => ({\n  type: CONST.ACTIONS_APPEND,\n  payload: action,\n});\n\nexport const clearActions = () => ({ type: CONST.ACTIONS_CLEAR });\n\nexport const setActions = actions => ({\n  type: CONST.ACTIONS_SET,\n  payload: actions,\n});\n","import { createSelector } from 'reselect';\n\nexport const selectConnection = state => state.connection;\n\nexport const selectConnector = createSelector(selectConnection, ({ connector }) => connector);\n\nexport const selectConnected = createSelector(selectConnection, ({ connected }) => connected);\n","import * as CONST from './constants';\n\nexport const clearStatus = () => ({ type: CONST.STATUS_CLEAR });\n\nexport const setStatus = text => ({\n  type: CONST.STATUS_SET,\n  payload: text,\n});\n","import * as Storage from './Storage';\nimport initialDevices from '../store/devices/initialState';\n\nexport default ({ configuration, devices }) =>\n  Storage.set({\n    configuration: {\n      ...configuration,\n      forceConnect: undefined,\n      loading: undefined,\n    },\n    devices: {\n      ...initialDevices,\n      selected: devices.selected,\n    },\n  });\n","import * as CONST from './constants';\n\nexport const setConfiguration = ({\n  cloverDomain,\n  merchantId,\n  employeeId,\n  raid,\n  accessToken,\n  friendlyId,\n  forceConnect,\n}) => ({\n  type: CONST.CONFIGURATION_SET,\n  payload: { cloverDomain, merchantId, employeeId, raid, accessToken, friendlyId, forceConnect },\n});\n\nexport const setConfigurationLoading = () => ({ type: CONST.CONFIGURATION_LOADING });\n\nexport const setConfigurationNotLoading = () => ({ type: CONST.CONFIGURATION_NOT_LOADING });\n","import * as CONST from './constants';\n\nexport const clearDeviceId = () => ({ type: CONST.DEVICES_CLEAR_SELECTED });\n\nexport const clearDevices = () => ({ type: CONST.DEVICES_CLEAR_LIST });\n\nexport const setDeviceId = deviceId => ({\n  type: CONST.DEVICES_SET_SELECTED,\n  payload: deviceId,\n});\n\nexport const setDevices = devices => ({\n  type: CONST.DEVICES_SET_LIST,\n  payload: devices,\n});\n","import * as CONST from './constants';\n\nexport const setEmployee = data => ({\n  type: CONST.SETTINGS_EMPLOYEE,\n  payload: data,\n});\n\nexport const setPermissions = data => ({\n  type: CONST.SETTINGS_PERMISSIONS,\n  payload: data,\n});\n","import { APP } from '../../common/constants';\nimport persist from '../../common/persist';\nimport fetchDevices from '../../common/fetchDevices';\nimport fetchSettings from '../../common/fetchSettings';\nimport { setConfiguration, setConfigurationLoading, setConfigurationNotLoading } from '../configuration/actions';\nimport { setDevices } from '../devices/actions';\nimport { clearError, setError } from '../error/actions';\nimport { setEmployee, setPermissions } from '../settings/actions';\n\nexport default ({ cloverDomain, merchantId, employeeId, raid, accessToken, friendlyId, forceConnect }) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    await dispatch({\n      type: 'configure',\n      payload: { cloverDomain, merchantId, employeeId, raid, accessToken, friendlyId, forceConnect },\n    });\n    await dispatch(clearError());\n    await dispatch(setConfigurationLoading());\n\n    await dispatch(\n      setConfiguration({ cloverDomain, merchantId, employeeId, raid, accessToken, friendlyId, forceConnect })\n    );\n    persist(getState());\n\n    const devices = await fetchDevices({ cloverDomain, merchantId, raid, employeeId, accessToken });\n    await dispatch(setDevices(devices));\n\n    if (!devices.length) {\n      throw new Error('Merchant has no devices');\n    }\n\n    if (!devices.some(a => a.apps[APP.CLOUD_PAY_DISPLAY])) {\n      throw new Error('Merchant has no devices with Cloud Pay Display installed');\n    }\n\n    const { employee, permissions } = await fetchSettings({ cloverDomain, merchantId, employeeId, raid, accessToken });\n    await dispatch(setEmployee(employee));\n    await dispatch(setPermissions(permissions));\n  } catch (e) {\n    await dispatch(setError(e));\n  } finally {\n    await dispatch(setConfigurationNotLoading());\n  }\n};\n","import { createSelector } from 'reselect';\n\nexport const selectRawDevices = state => state.devices;\n\nexport const selectDeviceId = createSelector(selectRawDevices, ({ selected }) => selected);\n\nexport const selectDevices = createSelector(selectRawDevices, selectDeviceId, ({ list }, deviceId) =>\n  [...list].sort((a, b) => (a.id === deviceId ? -1 : b.id === deviceId ? 1 : 0))\n);\n","import * as CONST from './constants';\n\nexport const clearConnector = () => ({ type: CONST.CONNECTION_CLEAR });\n\nexport const setConnector = connector => ({\n  type: CONST.CONNECTION_SET,\n  payload: connector,\n});\n","import Clover from 'remote-pay-cloud';\n\nimport { APP } from '../../common/constants';\nimport persist from '../../common/persist';\nimport { selectConfiguration } from '../configuration/selectors';\nimport { selectDevices } from '../devices/selectors';\nimport { setConnector } from '../connection/actions';\nimport { setDeviceId } from '../devices/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default deviceId => async (dispatch, getState) => {\n  try {\n    await dispatch({ type: 'connect', payload: deviceId });\n    await dispatch(setDeviceId(deviceId));\n\n    const state = getState();\n    persist(state);\n\n    const { cloverDomain, merchantId, raid, accessToken, friendlyId, forceConnect } = selectConfiguration(state);\n    const device = selectDevices(state).find(d => d.id === deviceId);\n\n    if (!device) throw new Error(`Device not found`);\n    if (!device.apps[APP.CLOUD_PAY_DISPLAY]) throw new Error('Device does not have Cloud Pay Display installed');\n\n    const factory = Clover.CloverConnectorFactoryBuilder.createICloverConnectorFactory({\n      [Clover.CloverConnectorFactoryBuilder.FACTORY_VERSION]: Clover.CloverConnectorFactoryBuilder.VERSION_12,\n    });\n\n    const connector = factory.createICloverConnector(\n      new Clover.WebSocketCloudCloverDeviceConfigurationBuilder(raid, deviceId, merchantId, accessToken)\n        .setCloverServer(cloverDomain)\n        .setFriendlyId(friendlyId)\n        .setForceConnect(forceConnect)\n        .build()\n    );\n\n    class Listener extends Clover.remotepay.ICloverConnectorListener {\n      constructor() {\n        super();\n        Object.keys(Object.getPrototypeOf(Object.getPrototypeOf(this))).forEach(type => {\n          this[type] = payload => dispatch({ type: `@@connector/${type}`, payload });\n        });\n      }\n    }\n    const listener = new Listener();\n    connector.addCloverConnectorListener(listener);\n\n    dispatch(setConnector(connector));\n    dispatch(setStatus('Connecting…'));\n\n    connector.initializeConnection();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import * as CONST from './constants';\n\nexport const setActiveTransaction = ({ id, type, amount, tipAmount } = {}) => ({\n  type: CONST.TRANSACTIONS_ACTIVE,\n  payload: { id, type, amount, tipAmount },\n});\n\nexport const removeTransaction = id => ({\n  type: CONST.TRANSACTIONS_REMOVE,\n  payload: id,\n});\n\nexport const showTransaction = id => ({\n  type: CONST.TRANSACTIONS_SHOW,\n  payload: id,\n});\n\nexport const hideTransaction = id => ({\n  type: CONST.TRANSACTIONS_HIDE,\n  payload: id,\n});\n\nexport const updateTransaction = ({ id, type, amount, tipAmount, payment }) => ({\n  type: CONST.TRANSACTIONS_UPDATE,\n  payload: { id, type, amount, tipAmount, payment },\n});\n\nexport const setTransactionMode = ({ mode }) => ({\n  type: CONST.TRANSACTIONS_MODE,\n  payload: mode,\n});\n","import { clearConnector } from '../connection/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setError } from '../error/actions';\nimport { clearDevices } from '../devices/actions';\nimport { setActiveTransaction } from '../transactions/actions';\n\nexport default () => async (dispatch, getState) => {\n  try {\n    await dispatch({ type: 'disconnect' });\n\n    const connector = selectConnector(getState());\n    try {\n      connector.showWelcomeScreen();\n      await new Promise(resolve => setTimeout(resolve, 500));\n    } catch (e2) {\n      // Do nothing\n    }\n\n    connector.dispose();\n\n    await dispatch(clearConnector());\n    await dispatch(clearDevices());\n    await dispatch(setActiveTransaction());\n  } catch (e) {\n    await dispatch(setError(e));\n  }\n};\n","import en from './en.json';\nimport deDE from './de-DE.json';\nimport esAR from './es-AR.json';\nimport frCA from './fr-CA.json';\nimport nlNL from './nl-NL.json';\n\nexport default {\n  en,\n  'de-DE': deDE,\n  'es-AR': esAR,\n  'fr-CA': frCA,\n  'nl-NL': nlNL,\n};\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport resources from './locales';\n\nexport default i18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: ['en', 'de-DE', 'es-AR', 'fr-CA', 'nl-NL'],\n    debug: false,\n    keySeparator: '~',\n    nsSeparator: false,\n    interpolation: { escapeValue: false },\n    resources,\n  });\n","import { selectConnector } from '../connection/selectors';\nimport { clearActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'reset' });\n    dispatch(setStatus('Resetting…'));\n    dispatch(clearActions());\n\n    const connector = selectConnector(getState());\n    connector.resetDevice();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","export const selectError = state => state.error;\n","import { setError } from '../error';\nimport { ACTION } from '../../common/constants';\nimport { setActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'showWelcome' });\n    dispatch(setStatus('Ready'));\n    dispatch(setActions([{ type: ACTION.IDENTIFY }, { type: ACTION.TRANSACTION }]));\n\n    const connector = selectConnector(getState());\n    connector.showWelcomeScreen();\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import * as CONST from './constants';\n\nexport const appendBuffer = value => ({\n  type: CONST.BUFFER_APPEND,\n  payload: value,\n});\n\nexport const clearBuffer = () => ({ type: CONST.BUFFER_CLEAR });\n\nexport const setBuffer = value => ({\n  type: CONST.BUFFER_SET,\n  payload: value || '',\n});\n\nexport const undoBuffer = () => ({ type: CONST.BUFFER_UNDO });\n","export const selectBuffer = state => state.buffer;\n","import { createSelector } from 'reselect';\n\nexport const selectRawTransactions = state => state.transactions;\n\nexport const selectTransactions = createSelector(selectRawTransactions, ({ data }) => Object.values(data));\n\nexport const selectActiveTransaction = createSelector(selectRawTransactions, ({ active, data }) => data[active]);\n\nexport const selectActiveTransactionType = createSelector(selectActiveTransaction, active => active?.type);\n\nexport const selectActiveTransactionAmount = createSelector(\n  selectActiveTransaction,\n  active => (active?.amount || 0) + (active?.tipAmount || 0)\n);\n\nexport const selectPaymentTransactions = createSelector(selectTransactions, transactions =>\n  transactions.filter(t => t.payment)\n);\n\nexport const selectVisiblePaymentTransactions = createSelector(selectPaymentTransactions, transactions =>\n  transactions.filter(t => t.visible)\n);\n\nexport const selectTransactionMode = createSelector(selectRawTransactions, ({ mode }) => mode);\n","import Clover from 'remote-pay-cloud';\nimport i18n from '../../i18n';\n\nimport { clearBuffer } from '../buffer/actions';\nimport { selectBuffer } from '../buffer/selectors';\nimport { selectConnector } from '../connection/selectors';\nimport { selectCardEntryMethods } from '../configuration/selectors';\nimport { clearActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\nimport { TRANSACTION } from '../../common/constants';\nimport { updateTransaction, setActiveTransaction, selectTransactionMode } from '../transactions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    const t = await i18n;\n    dispatch({ ...action, type: 'transaction' });\n\n    const state = getState();\n    const buffer = selectBuffer(state);\n    const connector = selectConnector(state);\n    const cardEntryMethods = selectCardEntryMethods(state);\n    const type = selectTransactionMode(state);\n\n    dispatch(clearActions());\n    dispatch(setStatus('Processing...'));\n    dispatch(clearBuffer());\n\n    const amount = +buffer;\n    if (!amount) throw new Error('Amount is required');\n    if (isNaN(amount)) throw new Error('Amount is invalid');\n    if (amount <= 0 || amount > 99_999_99) throw new Error('Amount is invalid');\n\n    let id = Clover.CloverID.getNewId();\n    if (type === TRANSACTION.CREDIT) {\n      // HACK: externalId is ignored.  We need to use the externalReferenceId field, which is limited to 12-chars.\n      id = id.slice(0, 12);\n    }\n\n    dispatch(setActiveTransaction({ id, type, amount }));\n\n    switch (type) {\n      case TRANSACTION.SALE:\n        {\n          const request = new Clover.remotepay.SaleRequest();\n          request.setAmount(amount);\n          request.setExternalId(id);\n          request.setCardEntryMethods(cardEntryMethods);\n\n          dispatch(updateTransaction({ id, type: TRANSACTION.SALE, amount }));\n\n          connector.sale(request);\n        }\n        break;\n      case TRANSACTION.CREDIT:\n        {\n          const request = new Clover.remotepay.ManualRefundRequest();\n          request.setAmount(amount);\n          request.setExternalId(id);\n          request.setCardEntryMethods(cardEntryMethods);\n\n          dispatch(updateTransaction({ id, type: TRANSACTION.CREDIT, amount }));\n\n          connector.manualRefund(request);\n        }\n        break;\n      default:\n        throw new Error(`${t('ERROR~Invalid transaction type')}: ${type}`);\n    }\n  } catch (e) {\n    dispatch(setError(e));\n    dispatch({ type: '@@connector/onDeviceReady' });\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { TRANSACTION } from '../../common/constants';\nimport { setError } from '../error/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { clearActions } from '../actions/actions';\nimport { setStatus } from '../status/actions';\nimport { setActiveTransaction } from '../transactions';\n\nexport default payment => async (dispatch, getState) => {\n  try {\n    dispatch({ type: 'voidPayment', payload: payment });\n\n    const { id, externalPaymentId, orderId, amount, tipAmount } = payment;\n    const connector = selectConnector(getState());\n\n    dispatch(clearActions());\n    dispatch(setStatus('Processing…'));\n    if (!id) throw new Error('No payment was specified');\n\n    const type = TRANSACTION.VOID;\n    dispatch(setActiveTransaction({ id: externalPaymentId, type, amount, tipAmount }));\n\n    const request = new Clover.remotepay.VoidPaymentRequest();\n    request.setPaymentId(id);\n    request.setOrderId(orderId);\n    request.setVoidReason(Clover.order.VoidReason.USER_CANCEL);\n    connector.voidPayment(request);\n  } catch (e) {\n    dispatch(setError(e));\n    dispatch({ type: '@@connector/onDeviceReady' });\n  }\n};\n","import createStore from './createStore';\nimport { selectConfiguration } from './configuration/selectors';\nimport { configure } from './thunks';\n\nconst store = createStore(undefined);\n\nconst config = selectConfiguration(store.getState());\nstore.dispatch(configure(config));\n\nexport default store;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './rootReducer';\n\nexport default initialState => {\n  const middleware = applyMiddleware(thunk);\n\n  // eslint-disable-next-line no-underscore-dangle\n  const devTools = window.__REDUX_DEVTOOLS_EXTENSION__;\n  const enhancer = devTools ? devTools() : f => f;\n\n  return createStore(rootReducer, initialState, compose(middleware, enhancer));\n};\n","import { createSelector } from 'reselect';\n\nimport { ACTION } from '../../common/constants';\n\nexport const selectActions = state => state.actions;\n\nexport const selectTransactionAction = createSelector(selectActions, actions =>\n  actions.find(a => a.type === ACTION.TRANSACTION)\n);\n\nexport const selectNonTransactionActions = createSelector(selectActions, actions => {\n  const arr = actions.filter(a => a.type !== ACTION.TRANSACTION);\n  if (arr.length === 2) {\n    const [a, b] = arr;\n    if (a.payload?.description === 'No' && b.payload?.description === 'Yes') {\n      return [b, a];\n    }\n  }\n  return arr;\n});\n","import { createSelector } from 'reselect';\nimport { PERMISSION } from '../../common';\n\nexport const selectRawSettings = state => state.settings;\n\nexport const selectEmployee = createSelector(selectRawSettings, ({ employee }) => employee);\n\nexport const selectEmployeeRoles = createSelector(selectEmployee, employee => employee?.roles?.elements);\n\nexport const selectPermissions = createSelector(selectRawSettings, ({ permissions }) => permissions?.elements);\n\nexport const selectCreditEnabled = createSelector(\n  selectEmployeeRoles,\n  selectPermissions,\n  (employeeRoles, permissions) => {\n    if (employeeRoles && permissions) {\n      const employeeRoleIds = employeeRoles.map(r => r.id);\n      const permissionRoleIds = new Set(\n        permissions\n          .filter(p => p.name === PERMISSION.PERFORM_MANUAL_REFUND)\n          .map(p => p.roles?.elements.map(r => r.id))\n          .flat()\n      );\n      return employeeRoleIds.some(id => permissionRoleIds.has(id));\n    }\n    return false;\n  }\n);\n\nexport const selectVoidEnabled = createSelector(\n  selectEmployeeRoles,\n  selectPermissions,\n  (employeeRoles, permissions) => {\n    if (employeeRoles && permissions) {\n      const employeeRoleIds = employeeRoles.map(r => r.id);\n      const permissionRoleIds = new Set(\n        permissions\n          .filter(p => p.name === PERMISSION.VOID_PAYMENTS)\n          .map(p => p.roles?.elements.map(r => r.id))\n          .flat()\n      );\n      return employeeRoleIds.some(id => permissionRoleIds.has(id));\n    }\n    return false;\n  }\n);\n","import { createSelector } from 'reselect';\n\nexport const selectSignature = state => state.signature;\n\nexport const selectSignatureBounds = createSelector(selectSignature, ({ strokes }) => {\n  const bounds = strokes\n    .map(({ points }) => points)\n    .flat()\n    .reduce(\n      ({ x, X, y, Y }, point) => ({\n        x: Math.min(x, point.x),\n        X: Math.max(X, point.x),\n        y: Math.min(y, point.y),\n        Y: Math.max(Y, point.y),\n      }),\n      { x: Infinity, X: -Infinity, y: Infinity, Y: -Infinity }\n    );\n  return [bounds.x, bounds.y, bounds.X - bounds.x, bounds.Y - bounds.y].join(' ');\n});\n\nexport const selectSignatureLines = createSelector(selectSignature, ({ strokes }) =>\n  strokes.map(({ points }) => points.map(({ x, y }) => `${x},${y}`).join(' '))\n);\n","export const selectStatus = state => state.status;\n","import { createSelector } from 'reselect';\nimport { selectConnector, selectDevices } from '../../store';\n\nexport const selectVisible = createSelector(\n  selectConnector,\n  selectDevices,\n  (connector, devices) => !connector && !devices.length\n);\n","import React, { useMemo, useState, useCallback } from 'react';\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport Markdown from 'react-markdown';\n\nexport default ({\n  id,\n  type = 'text',\n  autoCorrect = 'off',\n  autoComplete = 'off',\n  autoCapitalize = 'off',\n  spellCheck = 'false',\n  value,\n  disabled,\n  onChange,\n  ...other\n}) => {\n  const { t } = useTranslation();\n\n  const [show, setShow] = useState(false);\n  const toggle = useCallback(() => setShow(cur => !cur), [setShow]);\n\n  const label = useMemo(() => t(`${id}~label`), [id, t]);\n  const title = useMemo(() => t(`${id}~title`, ''), [id, t]);\n  const help = useMemo(() => t(`${id}~help`, ''), [id, t]);\n\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={id} className=\"d-block\">\n        {label}:\n        {help && (\n          <>\n            <Button\n              type=\"button\"\n              id={`${id}-btn`}\n              color=\"secondary\"\n              outline\n              size=\"sm\"\n              className=\"float-right p-0 px-2\"\n              title=\"Help\"\n              onFocus={toggle}\n            >\n              ?\n            </Button>\n            <Popover trigger=\"focus\" isOpen={show} toggle={toggle} target={`${id}-btn`}>\n              <PopoverHeader>{label} Help</PopoverHeader>\n              <PopoverBody>\n                <Markdown source={help} linkTarget=\"_blank\" />\n              </PopoverBody>\n            </Popover>\n          </>\n        )}\n      </label>\n      <input\n        id={id}\n        type={type}\n        className=\"form-control\"\n        title={title}\n        autoCorrect={autoCorrect}\n        autoComplete={autoComplete}\n        autoCapitalize={autoCapitalize}\n        spellCheck={spellCheck}\n        value={value}\n        onChange={event => onChange(event.target.value)}\n        disabled={disabled}\n        {...other}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nexport default ({ id, label, checked, onChange, disabled, switch: isSwitch, mb0, ...other }) => {\n  return (\n    <div className={classNames('form-group', { 'mb-0': mb0 })}>\n      <div className={classNames('custom-control', { 'custom-switch': isSwitch, 'custom-checkbox': !isSwitch })}>\n        <input\n          id={id}\n          type=\"checkbox\"\n          className=\"custom-control-input\"\n          checked={checked}\n          onChange={() => onChange(!checked)}\n          disabled={disabled}\n          {...other}\n        />\n        <label className=\"custom-control-label font-weight-normal\" htmlFor={id}>\n          {label}\n        </label>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport default ({ size = 28 }) => {\n  const { t } = useTranslation();\n  return (\n    <svg\n      className=\"Logo\"\n      id=\"clover-logo-svg\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 33.15 33.15\"\n      aria-labelledby=\"svg-logo-title\"\n      role=\"image\"\n    >\n      <title id=\"svg-logo-title\">{t('Clover')}</title>\n      <g id=\"clover-symbol-2\" data-name=\"clover-symbol\">\n        <path d=\"M191.45,85.64A7.5,7.5,0,1,0,184,93.09h7.49V85.64Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path d=\"M193.61,85.64a7.5,7.5,0,1,1,7.49,7.45h-7.49V85.64Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path d=\"M193.61,102.7a7.5,7.5,0,1,0,7.49-7.45h-7.49v7.45Z\" transform=\"translate(-176.46 -77.01)\"></path>\n        <path\n          d=\"M191.46,102.7A7.5,7.5,0,1,1,184,95.25h7.49v7.45Zm-7.5,5.35a5.38,5.38,0,0,0,5.4-5.35V97.36H184a5.35,5.35,0,1,0,0,10.7h0Z\"\n          transform=\"translate(-176.46 -77.01)\"\n        ></path>\n      </g>\n    </svg>\n  );\n};\n","import React, { useCallback, useState, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Collapse, Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { configure, selectConfiguration, selectConfigurationLoading } from '../../store';\nimport { selectVisible } from './selectors';\nimport { CheckboxField, TextField } from '../Fields';\nimport { Logo } from '../SVG';\n\nexport default () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const configuration = useSelector(selectConfiguration);\n  const loading = useSelector(selectConfigurationLoading);\n  const visible = useSelector(selectVisible);\n\n  const [cloverDomain, setCloverDomain] = useState(configuration.cloverDomain);\n  const [merchantId, setMerchantId] = useState(configuration.merchantId);\n  const [employeeId, setEmployeeId] = useState(configuration.employeeId);\n  const [accessToken, setAccessToken] = useState(configuration.accessToken);\n  const [raid, setRaid] = useState(configuration.raid);\n  const [friendlyId, setFriendlyId] = useState(configuration.friendlyId);\n  const [forceConnect, setForceConnect] = useState(configuration.forceConnect);\n  const [expanded, setExpanded] = useState(false);\n  const toggle = useCallback(() => setExpanded(cur => !cur), [setExpanded]);\n\n  const [submitting, setSubmitting] = useState(false);\n\n  const disabled = useMemo(() => loading || submitting, [loading, submitting]);\n\n  console.log({ forceConnect });\n\n  const submit = useCallback(\n    async event => {\n      try {\n        console.log('submit', { forceConnect });\n        event.preventDefault();\n        setSubmitting(true);\n        await dispatch(\n          configure({ cloverDomain, merchantId, employeeId, accessToken, raid, friendlyId, forceConnect })\n        );\n      } finally {\n        setSubmitting(false);\n      }\n    },\n    [dispatch, cloverDomain, merchantId, employeeId, accessToken, raid, friendlyId, forceConnect]\n  );\n\n  const reset = useCallback(\n    event => {\n      event.preventDefault();\n      setCloverDomain(configuration.cloverDomain);\n      setMerchantId(configuration.merchantId);\n      setEmployeeId(configuration.employeeId);\n      setAccessToken(configuration.accessToken);\n      setRaid(configuration.raid);\n      setFriendlyId(configuration.friendlyId);\n      setForceConnect(configuration.forceConnect);\n    },\n    [\n      configuration,\n      setCloverDomain,\n      setMerchantId,\n      setEmployeeId,\n      setAccessToken,\n      setRaid,\n      setFriendlyId,\n      setForceConnect,\n    ]\n  );\n\n  if (!visible) return null;\n\n  return (\n    <form onSubmit={submit} onReset={reset}>\n      <Card className=\"Configuration\">\n        <CardHeader>\n          <Logo />\n          <h3>{t('Virtual Keypad')}</h3>\n        </CardHeader>\n        {loading && (\n          <CardBody>\n            <p>Loading...</p>\n          </CardBody>\n        )}\n        {!loading && (\n          <>\n            <CardBody>\n              <Button type=\"button\" size=\"sm\" className=\"w-100 mb-2\" color=\"dark\" onClick={toggle}>\n                {t('Configuration')} {expanded ? '▲' : '▼'}\n              </Button>\n              <Collapse isOpen={expanded}>\n                <TextField\n                  id=\"cloverDomain\"\n                  type=\"url\"\n                  value={cloverDomain}\n                  onChange={setCloverDomain}\n                  disabled={disabled}\n                  required\n                />\n                <TextField\n                  id=\"merchantId\"\n                  pattern=\"^[a-zA-Z0-9]{13}$\"\n                  maxLength=\"13\"\n                  value={merchantId}\n                  onChange={setMerchantId}\n                  disabled={disabled}\n                  required\n                />\n                <TextField\n                  id=\"employeeId\"\n                  pattern=\"^[a-zA-Z0-9]{13}$\"\n                  maxLength=\"13\"\n                  value={employeeId}\n                  onChange={setEmployeeId}\n                  disabled={disabled}\n                />\n                <TextField\n                  id=\"raid\"\n                  pattern=\"^[a-zA-Z0-9 .]{1,255}$\"\n                  value={raid}\n                  onChange={setRaid}\n                  disabled={disabled}\n                  required\n                />\n                <TextField\n                  id=\"accessToken\"\n                  pattern=\"^[a-fA-F0-9]{8}(-?[a-fA-F0-9]{4}){3}-?[a-fA-F0-9]{12}$\"\n                  value={accessToken}\n                  onChange={setAccessToken}\n                  disabled={disabled}\n                  required\n                />\n                <TextField id=\"friendlyId\" value={friendlyId} onChange={setFriendlyId} disabled={disabled} />\n                <CheckboxField\n                  id=\"forceConnect\"\n                  label=\"Force Connect\"\n                  checked={forceConnect}\n                  onChange={() => setForceConnect(!forceConnect)}\n                  mb0\n                />\n              </Collapse>\n            </CardBody>\n            <CardFooter>\n              <Button type=\"submit\" color=\"success\" disabled={disabled}>\n                {t('Connect')}\n              </Button>\n              <Button type=\"reset\" color=\"secondary\" className=\"ml-2\" disabled={disabled}>\n                {t('Reset')}\n              </Button>\n            </CardFooter>\n          </>\n        )}\n      </Card>\n    </form>\n  );\n};\n","import { createSelector } from 'reselect';\n\nimport { selectConnector, selectDevices } from '../../store';\n\nexport const selectVisible = createSelector(\n  selectConnector,\n  selectDevices,\n  (connector, devices) => !connector && !!devices.length\n);\n","import React, { useState, useMemo } from 'react';\nimport { Tooltip } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\n\nimport { APP } from '../../common/constants';\n\nexport default ({ device, active, disabled, onClick }) => {\n  const { t } = useTranslation();\n  const [show, setShow] = useState(false);\n  const id = useMemo(() => `device-${device.id}`, [device.id]);\n\n  const toggle = event => {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setShow(!show);\n  };\n\n  const cloud = device.apps[APP.CLOUD_PAY_DISPLAY];\n  const cloudStatus = t(`cloudPayDisplay~${cloud ? '' : 'un'}installed`);\n\n  return (\n    <button\n      key={device.id}\n      type=\"button\"\n      className={classNames(\n        'list-group-item d-flex justify-content-between align-items-center list-group-item-action p-1',\n        {\n          disabled,\n          'list-group-item-primary': !disabled && active,\n        }\n      )}\n      onClick={onClick}\n    >\n      <div className=\"p-1\">\n        {device.name && <div className=\"font-weight-bold\">{device.name}</div>}\n        {device.productName} {device.serial}\n      </div>\n      <span\n        id={id}\n        onMouseEnter={() => setShow(true)}\n        onMouseLeave={() => setShow(false)}\n        onClick={toggle}\n        className={classNames('badge p-1', {\n          'badge-secondary': disabled,\n          'badge-success': !disabled && cloud,\n          'badge-warning': !disabled && !cloud,\n        })}\n        role=\"img\"\n        aria-label={cloudStatus}\n      >\n        ☁️\n      </span>\n      <Tooltip isOpen={show} target={id} toggle={toggle} placement=\"left\">\n        <span className=\"small\">{cloudStatus}</span>\n      </Tooltip>\n    </button>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { selectDevices, selectDeviceId, connect, clearDevices } from '../../store';\nimport { selectVisible } from './selectors';\nimport { Logo } from '../SVG';\nimport Device from './Device';\n\nexport default () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const devices = useSelector(selectDevices);\n  const deviceId = useSelector(selectDeviceId);\n  const visible = useSelector(selectVisible);\n  const [disabled, setDisabled] = useState();\n\n  const select = useCallback(\n    id => async event => {\n      try {\n        event.preventDefault();\n        setDisabled(true);\n        await dispatch(connect(id));\n      } finally {\n        setDisabled(false);\n      }\n    },\n    [dispatch]\n  );\n\n  const cancel = () => dispatch(clearDevices());\n\n  if (!visible) return null;\n\n  return (\n    <Card className=\"Devices\">\n      <CardHeader>\n        <Logo />\n        <h3>{t('Virtual Keypad')}</h3>\n        <button className=\"close text-light\" title={t('Cancel')} onClick={cancel} disabled={disabled}>\n          &times;\n        </button>\n      </CardHeader>\n      <CardBody>\n        <div className=\"form-group\">\n          <label>{t('Select Device')}:</label>\n          <div className=\"list-group\">\n            {devices.map(device => (\n              <Device\n                key={device.id}\n                device={device}\n                disabled={disabled}\n                active={device.id === deviceId}\n                onClick={select(device.id)}\n              />\n            ))}\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n","import { ACTION } from '../../common/constants';\nimport {\n  acceptPayment,\n  acceptSignature,\n  disconnect,\n  identify,\n  invokeInputOption,\n  rejectPayment,\n  rejectSignature,\n  reset,\n  setTransactionMode,\n  showWelcome,\n  transaction,\n} from '../../store';\n\nexport const ACTION_CREATOR = {\n  [ACTION.ACCEPT_PAYMENT]: acceptPayment,\n  [ACTION.ACCEPT_SIGNATURE]: acceptSignature,\n  [ACTION.DISCONNECT]: disconnect,\n  [ACTION.IDENTIFY]: identify,\n  [ACTION.INVOKE_INPUT_OPTION]: invokeInputOption,\n  [ACTION.REJECT_PAYMENT]: rejectPayment,\n  [ACTION.REJECT_SIGNATURE]: rejectSignature,\n  [ACTION.RESET]: reset,\n  [ACTION.SHOW_WELCOME]: showWelcome,\n  [ACTION.TRANSACTION]: transaction,\n  [ACTION.TRANSACTION_MODE]: ({ payload }) => setTransactionMode(payload),\n};\n\nexport const MODE = {\n  TRANSACTION: 'TRANSACTION',\n  HISTORY: 'HISTORY',\n};\n","import { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'acceptPayment' });\n    dispatch(setStatus('Accepting payment…'));\n    dispatch(clearActions());\n\n    const connector = selectConnector(getState());\n    connector.acceptPayment(action.payload.payment);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\nimport { clearSignature } from '../signature/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'acceptSignature' });\n    dispatch(setStatus('Accepting signature…'));\n    dispatch(clearActions());\n    dispatch(clearSignature());\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.VerifySignatureRequest();\n    request.setPayment(action.payload.payment);\n    connector.acceptSignature(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import * as CONST from './constants';\n\nexport const clearSignature = () => ({ type: CONST.SIGNATURE_CLEAR });\n\nexport const setSignature = signature => ({\n  type: CONST.SIGNATURE_SET,\n  payload: signature,\n});\n","import { ACTION } from '../../common/constants';\nimport { selectConnector } from '../connection/selectors';\nimport { selectFriendlyId } from '../configuration/selectors';\nimport { setActions } from '../actions/actions';\nimport { setError } from '../error/actions';\nimport { setStatus } from '../status/actions';\nimport i18n from '../../i18n';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    const t = await i18n;\n    dispatch({ ...action, type: 'identify' });\n    dispatch(setStatus('Identifying…'));\n    dispatch(\n      setActions([\n        { type: ACTION.SHOW_WELCOME, payload: { description: 'OK' } },\n        { type: ACTION.DISCONNECT, payload: { description: 'Cancel' } },\n      ])\n    );\n\n    const state = getState();\n    const connector = selectConnector(state);\n    const friendlyId = selectFriendlyId(state);\n\n    connector.showMessage(`${friendlyId} ${t('connected')}`);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { setError } from '../error/actions';\nimport { selectConnector } from '../connection/selectors';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'invokeInputOption' });\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.InputOption();\n    request.setDescription(action.payload.description);\n    request.setKeyPress(action.payload.keyPress);\n    connector.invokeInputOption(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'rejectPayment' });\n    dispatch(setStatus('Rejecting payment…'));\n    dispatch(clearActions());\n\n    const connector = selectConnector(getState());\n    connector.rejectPayment(action.payload.payment, action.payload.challenges[0]);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import Clover from 'remote-pay-cloud';\n\nimport { setError } from '../error/actions';\nimport { clearActions } from '../actions/actions';\nimport { selectConnector } from '../connection/selectors';\nimport { setStatus } from '../status/actions';\nimport { clearSignature } from '../signature/actions';\n\nexport default action => async (dispatch, getState) => {\n  try {\n    dispatch({ ...action, type: 'rejectSignature' });\n    dispatch(setStatus('Rejecting signature…'));\n    dispatch(clearActions());\n    dispatch(clearSignature());\n\n    const connector = selectConnector(getState());\n    const request = new Clover.remotepay.VerifySignatureRequest();\n    request.setPayment(action.payload.payment);\n    connector.rejectSignature(request);\n  } catch (e) {\n    dispatch(setError(e));\n  }\n};\n","import { createSelector } from 'reselect';\nimport { selectConnector } from '../../store';\n\nexport const selectVisible = createSelector(selectConnector, connector => !!connector);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectSignatureBounds, selectSignatureLines } from '../../store';\n\nexport default ({ width = 250, ...other }) => {\n  const bounds = useSelector(selectSignatureBounds);\n  const lines = useSelector(selectSignatureLines);\n\n  if (!lines.length) return null;\n\n  return (\n    <div className=\"Signature\">\n      <svg viewBox={bounds} width={width} {...other}>\n        {lines.map((points, i) => (\n          <polyline key={i} points={points} fill=\"none\" stroke=\"black\" />\n        ))}\n      </svg>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport { currency } from '../../common';\nimport { selectStatus, selectBuffer, selectActiveTransactionType, selectActiveTransactionAmount } from '../../store';\nimport Signature from './Signature';\n\nexport default () => {\n  const { t } = useTranslation();\n  const status = useSelector(selectStatus);\n  const buffer = useSelector(selectBuffer);\n  const tranType = useSelector(selectActiveTransactionType);\n  const tranAmount = useSelector(selectActiveTransactionAmount);\n\n  return (\n    <div className=\"Screen alert alert-secondary\">\n      {!!tranAmount && (\n        <div className=\"Transaction d-flex justify-content-between bg-white rounded-top border-bottom border-secondary\">\n          <div className=\"font-italic\">{t([`TRANSACTION~${tranType}`, tranType])}</div>\n          <div className=\"font-weight-bold\">{currency(tranAmount)}</div>\n        </div>\n      )}\n      {!buffer && <div>{status}</div>}\n      <Signature />\n      {buffer && <div className=\"text-muted\">{buffer}</div>}\n      {buffer && <h3 className=\"text-right\">{currency(buffer)}</h3>}\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\n\nconst measure = (el, scale) => {\n  const { fontSize } = el.style;\n  el.style.fontSize = `${scale}em`; // eslint-disable-line no-param-reassign\n  const { offsetWidth, offsetHeight, scrollWidth, scrollHeight } = el.parentElement;\n  el.style.fontSize = fontSize; // eslint-disable-line no-param-reassign\n  return Math.min(offsetWidth / scrollWidth, offsetHeight / scrollHeight) >= 1;\n};\n\nconst resize = (el, [min, max], attempts = 10) => {\n  if (attempts <= 0) return;\n  const mid = (max + min) / 2;\n  if (measure(el, mid)) {\n    // eslint-disable-next-line no-param-reassign\n    el.style.fontSize = `${mid}em`;\n    resize(el, [mid, max], attempts - 1);\n  } else {\n    resize(el, [min, mid], attempts - 1);\n  }\n};\n\nexport default ({ children, minScale = 0.4, maxScale = 1 }) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    const el = ref.current;\n    if (el) {\n      if (measure(el, maxScale)) {\n        el.style.fontSize = `${maxScale}em`;\n      } else {\n        el.style.fontSize = `${minScale}em`;\n        if (!measure(el, minScale)) {\n          el.classList.add('text-truncate');\n        } else {\n          resize(el, [minScale, maxScale]);\n        }\n      }\n    }\n  }, [maxScale, minScale, ref]);\n\n  return <span ref={ref}>{children}</span>;\n};\n","import React, { forwardRef, useEffect, useState, useMemo, useCallback, useRef } from 'react';\nimport { Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\n\nimport ScaleText from './ScaleText';\n\nexport default forwardRef(\n  (\n    { action, height, color, keyCodes, disabled, onClick, moreActions, moreText, onMoreClick, children, ...other },\n    ref$\n  ) => {\n    const { t } = useTranslation();\n    const [show, setShow] = useState(false);\n    const ref = ref$ || useRef();\n\n    const toggle = useCallback(() => setShow(cur => !cur), [setShow]);\n\n    useEffect(() => {\n      if (!disabled) {\n        const keydown = event => {\n          if (keyCodes.includes(event.code)) {\n            event.preventDefault();\n            onClick();\n            return false;\n          }\n          return true;\n        };\n        document.addEventListener('keydown', keydown);\n        return () => document.removeEventListener('keydown', keydown);\n      }\n      return undefined;\n    }, [disabled, keyCodes, onClick]);\n\n    const value = useMemo(() => {\n      const key = action?.payload?.description || action?.type;\n      return key ? t([`ACTION~${key}`, key]) : children;\n    }, [action, children, t]);\n\n    const title = useMemo(\n      () => [t('Shortcut keys'), keyCodes.map(k => t([`KEY_CODE~${k}`, k])).join(', ')].join(': '),\n      [keyCodes, t]\n    );\n\n    if (action && moreActions?.length) {\n      return (\n        <ButtonDropdown isOpen={show} toggle={toggle}>\n          <Button\n            color=\"dark\"\n            className=\"action rounded-left\"\n            onClick={onClick}\n            disabled={disabled}\n            title={title}\n            {...other}\n          >\n            {value || <span>&nbsp;</span>}\n          </Button>\n          <DropdownToggle caret color=\"dark\" className=\"action\" disabled={disabled} />\n          <DropdownMenu className=\"bg-dark\" right>\n            {moreActions.map((a, i) => (\n              <DropdownItem key={i} className=\"bg-dark text-light\" onClick={() => onMoreClick(a)}>\n                {t([`ACTION~${a.payload?.description || a.type}`, a.payload?.description || a.type])}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </ButtonDropdown>\n      );\n    }\n\n    if (moreActions?.length) {\n      return (\n        <div className=\"btn-group-vertical d-flex flex-column\">\n          <ButtonDropdown isOpen={show} toggle={toggle}>\n            <DropdownToggle\n              caret\n              color=\"dark\"\n              outline\n              size=\"sm\"\n              className=\"text-light text-truncate\"\n              disabled={disabled}\n            >\n              {moreText}\n            </DropdownToggle>\n            <DropdownMenu right className=\"bg-dark\">\n              {moreActions.map((a, i) => (\n                <DropdownItem key={i} className=\"bg-dark text-light\" onClick={() => onMoreClick(a)}>\n                  {t([`ACTION~${a.payload?.description || a.type}`, a.payload?.description || a.type])}\n                </DropdownItem>\n              ))}\n            </DropdownMenu>\n          </ButtonDropdown>\n          <Button\n            outline\n            color=\"dark\"\n            className={classNames('h-100', `text-${color || 'light'}`)}\n            onClick={onClick}\n            disabled={disabled}\n            title={title}\n            {...other}\n          >\n            {value || <span>&nbsp;</span>}\n          </Button>\n        </div>\n      );\n    }\n\n    return (\n      <Button\n        innerRef={ref}\n        style={{ height }}\n        outline={!action}\n        color=\"dark\"\n        className={classNames(`text-${color || 'light'}`, { action })}\n        disabled={disabled}\n        onClick={onClick}\n        title={title}\n        {...other}\n      >\n        <ScaleText key={value} minScale={action ? 0.4 : 1} maxScale={1}>\n          {value}\n        </ScaleText>\n      </Button>\n    );\n  }\n);\n","import React, { useMemo, useCallback, useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  appendBuffer,\n  clearBuffer,\n  selectCreditEnabled,\n  selectNonTransactionActions,\n  selectTransactionAction,\n  selectTransactionMode,\n  transaction,\n  undoBuffer,\n} from '../../store';\nimport Key from './Key';\nimport { ACTION_CREATOR } from './constants';\nimport { ACTION, TRANSACTION } from '../../common';\n\nexport default () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const actions = useSelector(selectNonTransactionActions);\n  const transactionAction = useSelector(selectTransactionAction);\n  const transactionMode = useSelector(selectTransactionMode);\n  const creditEnabled = useSelector(selectCreditEnabled);\n\n  const [actionClicked, setActionClicked] = useState(false);\n  const keysDisabled = useMemo(() => !transactionAction || actionClicked, [transactionAction, actionClicked]);\n\n  const onAction = useCallback(\n    async action => {\n      setActionClicked(true);\n      if (action.type === ACTION.INVOKE_INPUT_OPTION || action.type === ACTION.TRANSACTION_MODE) {\n        setTimeout(() => setActionClicked(false), 250);\n      }\n      await dispatch(ACTION_CREATOR[action.type](action));\n    },\n    [dispatch, setActionClicked]\n  );\n\n  const actionHandler = action => async () => onAction(action);\n\n  useEffect(() => {\n    if (actions.length) setActionClicked(false);\n  }, [setActionClicked, actions]);\n\n  const keyRef = useRef();\n  const [keyHeight, setKeyHeight] = useState();\n  useEffect(() => {\n    if (keyRef.current) {\n      setKeyHeight(keyRef.current.offsetWidth);\n    }\n  }, [keyRef, setKeyHeight]);\n\n  const submitOptions = useMemo(\n    () =>\n      creditEnabled\n        ? {\n            moreText: t([`TRANSACTION~${transactionMode}`, transactionMode]),\n            moreActions: [\n              {\n                type: ACTION.TRANSACTION_MODE,\n                payload: { description: 'TRANSACTION~SALE', mode: TRANSACTION.SALE },\n              },\n              {\n                type: ACTION.TRANSACTION_MODE,\n                payload: { description: 'TRANSACTION~CREDIT', mode: TRANSACTION.CREDIT },\n              },\n            ],\n            onMoreClick: action => onAction(action),\n          }\n        : undefined,\n    [creditEnabled, onAction, t, transactionMode]\n  );\n\n  const [action1, action2, ...moreActions] = actions;\n\n  return (\n    <div className=\"Keys\">\n      <div className=\"row no-gutters\">\n        <div className=\"col-6 p-1\">\n          <Key\n            action={action1 || {}}\n            disabled={!action1 || actionClicked}\n            keyCodes={['F1', 'NumpadDivide']}\n            onClick={actionHandler(action1)}\n          />\n        </div>\n        <div className=\"col-6 p-1\">\n          <Key\n            action={action2 || {}}\n            disabled={!action2 || actionClicked}\n            keyCodes={['F2', 'NumpadMultiply']}\n            onClick={actionHandler(action2)}\n            moreActions={moreActions}\n            onMoreClick={action => onAction(action)}\n          />\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 p-1\">\n          <Key\n            ref={keyRef}\n            height={keyHeight}\n            disabled={keysDisabled}\n            keyCodes={['Numpad7', 'Digit7']}\n            onClick={() => dispatch(appendBuffer('7'))}\n          >\n            {t('KEY~7')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad8', 'Digit8']} onClick={() => dispatch(appendBuffer('8'))}>\n            {t('KEY~8')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad9', 'Digit9']} onClick={() => dispatch(appendBuffer('9'))}>\n            {t('KEY~9')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"danger\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadSubtract', 'Escape']}\n            onClick={() => dispatch(clearBuffer())}\n          >\n            {t('KEY~X')}\n          </Key>\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 p-1\">\n          <Key\n            height={keyHeight}\n            disabled={keysDisabled}\n            keyCodes={['Numpad4', 'Digit4']}\n            onClick={() => dispatch(appendBuffer('4'))}\n          >\n            {t('KEY~4')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad5', 'Digit5']} onClick={() => dispatch(appendBuffer('5'))}>\n            {t('KEY~5')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key disabled={keysDisabled} keyCodes={['Numpad6', 'Digit6']} onClick={() => dispatch(appendBuffer('6'))}>\n            {t('KEY~6')}\n          </Key>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"warning\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadAdd', 'Backspace', 'Delete']}\n            onClick={() => dispatch(undoBuffer())}\n          >\n            {t('KEY~<')}\n          </Key>\n        </div>\n      </div>\n      <div className=\"row no-gutters\">\n        <div className=\"col-9\">\n          <div className=\"row no-gutters\">\n            <div className=\"col-4 p-1\">\n              <Key\n                height={keyHeight}\n                disabled={keysDisabled}\n                keyCodes={['Numpad1', 'Digit1']}\n                onClick={() => dispatch(appendBuffer('1'))}\n              >\n                {t('KEY~1')}\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key disabled={keysDisabled} keyCodes={['Numpad2', 'Digit2']} onClick={() => dispatch(appendBuffer('2'))}>\n                {t('KEY~2')}\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key disabled={keysDisabled} keyCodes={['Numpad3', 'Digit3']} onClick={() => dispatch(appendBuffer('3'))}>\n                {t('KEY~3')}\n              </Key>\n            </div>\n          </div>\n          <div className=\"row no-gutters\">\n            <div className=\"col-8 p-1\">\n              <Key\n                height={keyHeight}\n                disabled={keysDisabled}\n                keyCodes={['Numpad0', 'Digit0']}\n                onClick={() => dispatch(appendBuffer('0'))}\n              >\n                {t('KEY~0')}\n              </Key>\n            </div>\n            <div className=\"col-4 p-1\">\n              <Key\n                disabled={keysDisabled}\n                keyCodes={['NumpadDecimal', 'Period']}\n                onClick={() => dispatch(appendBuffer('00'))}\n              >\n                {t('KEY~00')}\n              </Key>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-3 p-1\">\n          <Key\n            color=\"success\"\n            disabled={keysDisabled}\n            keyCodes={['NumpadEnter', 'Enter']}\n            onClick={() => dispatch(transaction())}\n            {...submitOptions}\n          >\n            {t('KEY~O')}\n          </Key>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { disconnect, reset, showWelcome } from '../../store';\nimport { CheckboxField } from '../Fields';\nimport { MODE } from './constants';\n\nexport default ({ mode, setMode }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const toggle = useCallback(() => setShow(!show), [show, setShow]);\n  const onShowWelcome = useCallback(() => dispatch(showWelcome()), [dispatch]);\n  const onReset = useCallback(() => dispatch(reset()), [dispatch]);\n  const onDisconnect = useCallback(() => dispatch(disconnect()), [dispatch]);\n\n  return (\n    <ButtonDropdown isOpen={show} toggle={toggle}>\n      <DropdownToggle size=\"sm\" outline color=\"dark\" className=\"text-light\" onClick={toggle} title={t('Menu')}>\n        ☰\n      </DropdownToggle>\n      <DropdownMenu right>\n        {Object.values(MODE).map(m => (\n          <DropdownItem key={m} onClick={() => setMode(m)}>\n            <CheckboxField id={`mode-${m}`} label={t([`MODE~${m}`, m])} checked={m === mode} readOnly mb0 />\n          </DropdownItem>\n        ))}\n        <DropdownItem divider />\n        <DropdownItem onClick={onShowWelcome}>{t('Show Welcome')}</DropdownItem>\n        <DropdownItem onClick={onReset}>{t('Reset Device')}</DropdownItem>\n        <DropdownItem onClick={onDisconnect}>{t('Disconnect')}</DropdownItem>\n      </DropdownMenu>\n    </ButtonDropdown>\n  );\n};\n","export default ({ amount, tipAmount, payment }) => {\n  const start = (amount || 0) + (tipAmount || 0);\n  const final = (payment?.amount || 0) + (payment?.tipAmount || 0);\n  const partial = start > final;\n  const remaining = start - final;\n  return { start, final, partial, remaining };\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Table } from 'reactstrap';\nimport { useToasts } from 'react-toast-notifications';\nimport { useTranslation } from 'react-i18next';\nimport { add } from 'date-fns';\n\nimport { currency, card, TRANSACTION } from '../../common';\nimport {\n  hideTransaction,\n  selectVoidEnabled,\n  setBuffer,\n  setError,\n  transaction as doTransaction,\n  voidPayment,\n} from '../../store';\nimport parseAmounts from './parseAmounts';\n\nexport default ({ transaction }) => {\n  const { id, timestamp, type, payment } = transaction || {};\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { removeToast } = useToasts();\n  const voidEnabled = useSelector(selectVoidEnabled);\n  const now = Date.now();\n  const voidableUntil = add(timestamp, { minutes: 26 });\n  const [voidable, setVoidable] = useState(voidEnabled && now <= voidableUntil);\n\n  useEffect(() => {\n    if (voidable) {\n      const ms = voidableUntil - now;\n      if (ms > 0) {\n        const to = setTimeout(() => setVoidable(false), ms);\n        return () => clearTimeout(to);\n      }\n    }\n    return undefined;\n  }, [now, setVoidable, voidable, voidableUntil]);\n\n  const { partial, remaining } = parseAmounts(transaction);\n\n  const onRemaining = useCallback(async () => {\n    try {\n      await dispatch(setBuffer(remaining));\n      await dispatch(doTransaction());\n    } catch (e) {\n      await dispatch(setError(e));\n    }\n  }, [remaining, dispatch]);\n\n  const onVoid = useCallback(async () => {\n    try {\n      removeToast(id);\n      await dispatch(hideTransaction(id));\n      await dispatch(voidPayment(payment));\n    } catch (e) {\n      await dispatch(setError(e));\n    }\n  }, [dispatch, id, payment, removeToast]);\n\n  return (\n    <div className=\"Transaction\">\n      {transaction.type !== TRANSACTION.VOID && partial && (\n        <div className=\"alert alert-warning\">\n          <h6 className=\"alert-heading\">{t('Partial Payment')}</h6>\n          <div>\n            {t('Remaining')}: {currency(remaining)}\n          </div>\n        </div>\n      )}\n      <h5>\n        {t([`TRANSACTION~${type}`, type])} {t('Details')}\n      </h5>\n      <Table size=\"sm\" className=\"small mb-0\">\n        <tbody>\n          <tr>\n            <th>{t('Payment ID')}:</th>\n            <td>{payment.id}</td>\n          </tr>\n          {payment.externalPaymentId && (\n            <tr>\n              <th>{t('External ID')}:</th>\n              <td>{payment.externalPaymentId}</td>\n            </tr>\n          )}\n          {payment.externalReferenceId && (\n            <tr>\n              <th>{t('External Ref')}:</th>\n              <td>{payment.externalReferenceId}</td>\n            </tr>\n          )}\n          <tr>\n            <th>{t('Order ID')}:</th>\n            <td>{payment.order?.id || payment.orderRef?.id}</td>\n          </tr>\n          {!!payment.tipAmount && (\n            <tr>\n              <th>{t('Total')}:</th>\n              <td>{currency(payment.amount + payment.tipAmount)}</td>\n            </tr>\n          )}\n          <tr>\n            <th>{t('Amount')}:</th>\n            <td>{currency(payment.amount)}</td>\n          </tr>\n          {!!payment.tipAmount && (\n            <tr>\n              <th>{t('Tip')}:</th>\n              <td>{currency(payment.tipAmount)}</td>\n            </tr>\n          )}\n          <tr>\n            <th>{t('Card')}:</th>\n            <td>\n              <div>{t([`CARD~${payment.cardTransaction.cardType}`, payment.cardTransaction.cardType])}</div>\n              <div>{card(payment.cardTransaction)}</div>\n              {payment.cardTransaction.cardholderName && (\n                <div>\n                  {t([\n                    `CARDHOLDER_NAME~${payment.cardTransaction.cardholderName}`,\n                    payment.cardTransaction.cardholderName,\n                  ])}\n                </div>\n              )}\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n      {transaction.type === TRANSACTION.SALE && (\n        <div>\n          {partial && (\n            <Button color=\"primary\" size=\"sm\" className=\"mr-1\" onClick={onRemaining}>\n              {t('Process')} {currency(remaining)}\n            </Button>\n          )}\n          {voidable && (\n            <Button color=\"danger\" size=\"sm\" onClick={onVoid}>\n              {t('Void')}\n            </Button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { hideTransaction } from '../../store';\nimport { TRANSACTION } from '../../common';\nimport parseAmounts from './parseAmounts';\nimport Transaction from './Transaction';\n\nexport default autoDismiss => {\n  const dispatch = useDispatch();\n  const { addToast } = useToasts();\n\n  return transaction => {\n    const { partial } = parseAmounts(transaction);\n\n    let appearance;\n    if (transaction.type === TRANSACTION.VOID) appearance = 'info';\n    else if (partial) appearance = 'warning';\n    else appearance = 'success';\n\n    addToast(<Transaction transaction={transaction} />, {\n      id: transaction.id,\n      appearance,\n      autoDismiss: autoDismiss && !partial,\n      autoDismissTimeout: 8000,\n      onDismiss: () => {\n        dispatch(hideTransaction(transaction.id));\n      },\n    });\n  };\n};\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Table } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport { format, compareDesc } from 'date-fns';\n\nimport { selectPaymentTransactions } from '../../store';\nimport { currency } from '../../common';\nimport { useShowTransaction } from '../Transaction';\n\nconst parseAmount = ({ amount, tipAmount, payment }) =>\n  currency(payment ? (payment.amount || 0) + (payment.tipAmount || 0) : (amount || 0) + (tipAmount || 0));\n\nconst parseTimestamp = ({ timestamp }) => (timestamp ? format(timestamp, 'M/d h:mm a') : '??');\n\nexport default () => {\n  const { t } = useTranslation();\n  const transactions = useSelector(selectPaymentTransactions);\n  const showTransaction = useShowTransaction();\n\n  const sortedTransactions = useMemo(() => transactions.sort((a, b) => compareDesc(a.timestamp, b.timestamp)), [\n    transactions,\n  ]);\n\n  return (\n    <div className=\"History\">\n      <Table size=\"sm\" hover className=\"table-secondary\" striped>\n        <thead>\n          <tr>\n            <th>{t('Date')}</th>\n            <th>{t('Type')}</th>\n            <th className=\"text-right\">{t('Amount')}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedTransactions.map(transaction => (\n            <tr key={transaction.id} role=\"button\" onClick={() => showTransaction(transaction)}>\n              <td>{parseTimestamp(transaction)}</td>\n              <td>{t(`TRANSACTION~${transaction.type}`)}</td>\n              <td className=\"text-right\">{parseAmount(transaction)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { Logo } from '../SVG';\nimport { MODE } from './constants';\nimport { selectVisible } from './selectors';\nimport Screen from './Screen';\nimport Keys from './Keys';\nimport Menu from './Menu';\nimport History from './History';\nimport './styles.scss';\n\nexport default () => {\n  const { t } = useTranslation();\n  const visible = useSelector(selectVisible);\n\n  const [mode, setMode] = useState(MODE.TRANSACTION);\n\n  if (!visible) return null;\n\n  return (\n    <Card className=\"Keypad\">\n      <CardHeader>\n        <Logo />\n        <h3>{t('Virtual Keypad')}</h3>\n        <Menu mode={mode} setMode={setMode} />\n      </CardHeader>\n      <CardBody>\n        {mode === MODE.TRANSACTION && <Screen />}\n        {mode === MODE.TRANSACTION && <Keys />}\n        {mode === MODE.HISTORY && <History />}\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Button } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\n\nexport default ({ error }) => {\n  const { message, stack } = error;\n  const { t } = useTranslation();\n  const [expanded, setExpanded] = useState(false);\n\n  const expand = () => {\n    document.querySelector('.react-toast-notifications__container').classList.add('expanded');\n    setExpanded(true);\n  };\n\n  useEffect(() => {\n    return () => {\n      const remaining = document.querySelectorAll('.Error.expanded').length - (expanded ? 1 : 0);\n      if (!remaining) {\n        document.querySelector('.react-toast-notifications__container').classList.remove('expanded');\n      }\n    };\n  }, [expanded]);\n\n  return (\n    <div className={classNames('Error', { expanded })}>\n      <h5>{t([`ERROR~${message}`, message])}</h5>\n      {!!stack && !expanded && (\n        <Button color=\"link\" size=\"small\" onClick={expand}>\n          {t('Show details')}\n        </Button>\n      )}\n      {!!stack && expanded && (\n        <pre className=\"mb-0\">\n          <code>{stack}</code>\n        </pre>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport Configuration from '../Configuration';\nimport Devices from '../Devices/Devices';\nimport Keypad from '../Keypad';\nimport { useError } from '../Error';\nimport { useTransactions } from '../Transaction';\nimport useMouse from './useMouse';\nimport usePreventDoubleTapZoom from './usePreventDoubleTapZoom';\nimport './styles.scss';\n\nexport default () => {\n  const mouse = useMouse();\n  useError(mouse);\n  usePreventDoubleTapZoom();\n  useTransactions(mouse);\n\n  return (\n    <div className={classNames('App container maxwidth')}>\n      <Configuration />\n      <Devices />\n      <Keypad />\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nexport default () => {\n  const [mouse, setMouse] = useState(false);\n\n  useEffect(() => {\n    if (!mouse) {\n      const onHover = () => setMouse(true);\n      document.addEventListener('mouseover', onHover);\n      return () => document.removeEventListener('mouseover', onHover);\n    }\n    return undefined;\n  }, [mouse, setMouse]);\n\n  return mouse;\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useToasts } from 'react-toast-notifications';\n\nimport { selectError, clearError } from '../../store';\nimport Error from './Error';\n\nexport default autoDismiss => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    if (error.message) {\n      addToast(<Error error={error} />, {\n        id: 'error',\n        appearance: 'error',\n        autoDismiss: autoDismiss && !error.important,\n        onDismiss: () => {\n          dispatch(clearError());\n        },\n      });\n    }\n  }, [addToast, dispatch, error, autoDismiss]);\n};\n","import { useEffect } from 'react';\n\nexport default ({ ms = 500 } = {}) =>\n  useEffect(() => {\n    let expires = 0;\n    const handler = event => {\n      if (event.touches.length === 1) {\n        const now = Date.now();\n        if (event.touches.length === 1 && now > expires) {\n          event.preventDefault();\n          // Trigger a fake click for the tap we just prevented\n          event.target.click();\n        }\n        expires = now + ms;\n      }\n    };\n\n    document.body.addEventListener('touchstart', handler, { passive: false });\n\n    return () => document.body.removeEventListener('touchstart', handler, { passive: false });\n  }, [ms]);\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectVisiblePaymentTransactions } from '../../store';\nimport useShowTransaction from './useShowTransaction';\n\nexport default autoDismiss => {\n  const transactions = useSelector(selectVisiblePaymentTransactions);\n  const showTransaction = useShowTransaction(autoDismiss);\n\n  useEffect(() => {\n    transactions.forEach(showTransaction);\n  }, [transactions, showTransaction]);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { ToastProvider } from 'react-toast-notifications';\n\nimport store from './store';\nimport App from './components/App';\nimport './i18n';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <ToastProvider placement=\"bottom-center\">\n        <App />\n      </ToastProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}